#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
const int nmax=1000006;
int father[nmax];
int isRoot[nmax];
 
int findFather(int u){
	if(u==father[u]) return u; 
	else{
		int f=findFather(father[u]);
		father[u]=f;
		return f;
	}
}
 
void Union(int u,int v){
	int fu=findFather(u);
	int fv=findFather(v);
	if(fu!=fv){
		father[fu]=fv;
	}
} 
 
void init(int n){
	for(int i=1;i<=n;i++){
		father[i]=i;
		isRoot[i]=0;
	}
}
int main() {
	int n;
    scanf("%d",&n);
	memset(father,0,sizeof(father));
	memset(isRoot,0,sizeof(isRoot));
	init(n);
			for(int i=1;i<=n;i++){
                int x;
				scanf("%d",&x);
				Union(i,x);
			}
			for(int i=1;i<=n;i++){
				isRoot[findFather(i)]++;
			}
			int ans=0;
			for(int i=1;i<=n;i++){
				if(isRoot[i]!=0){
					ans++;
				}
			}
			printf("%d\n",ans);
      //system("pasue");

	return 0;
}
